<?xml version="1.0"?>
<doc>
    <assembly>
        <name>RGNMessaging</name>
    </assembly>
    <members>
        <member name="T:RGN.Modules.Messaging.IMessageReceiver">
            <summary>
            Public interface to implement to receive messages from the backend.
            </summary>
        </member>
        <member name="M:RGN.Modules.Messaging.IMessageReceiver.OnMessageReceived(System.String,RGN.Modules.Messaging.Message)">
            <summary>
            This method is called when a new message arrives from the backend or at the start of the app
            </summary>
            <param name="topic"></param>
            <param name="message"></param>
        </member>
        <member name="T:RGN.Modules.Messaging.Message">
            <summary>
            This struct used to get messages from the backend
            </summary>
        </member>
        <member name="P:RGN.Modules.Messaging.Message.Id">
            <summary>
            Unique id of the message
            </summary>
        </member>
        <member name="P:RGN.Modules.Messaging.Message.Payload">
            <summary>
            Payload string to attach data to the message
            This could be for example Json string
            </summary>
        </member>
        <member name="M:RGN.Modules.Messaging.Message.ToString">
            <summary>
            Returns current values in as a string
            </summary>
            <returns>Current values as string</returns>
        </member>
        <member name="T:RGN.Modules.Messaging.MessagingModule">
            <summary>
            This module is responsible for sending and receiving Firebase Cloud Messages
            </summary>
        </member>
        <member name="M:RGN.Modules.Messaging.MessagingModule.Init">
            <summary>
            Initializes the MessagingModule.
            </summary>
        </member>
        <member name="M:RGN.Modules.Messaging.MessagingModule.Dispose(System.Boolean)">
            <summary>
            Releases all resources used by the MessagingModule.
            </summary>
        </member>
        <member name="M:RGN.Modules.Messaging.MessagingModule.Subscribe(System.String,RGN.Modules.Messaging.IMessageReceiver)">
            <summary>
            Subscribes the <see name="messageReceiver"/> to the provided <see name="topic"/>"
            </summary>
            <param name="topic">Not null topic string to subscribe</param>
            <param name="messageReceiver">Not null message receiver class instance to subsribe to the topic</param>
        </member>
        <member name="M:RGN.Modules.Messaging.MessagingModule.Unsubscribe(System.String,RGN.Modules.Messaging.IMessageReceiver)">
            <summary>
            Unsubscribes the <see name="messageReceiver"/> from the provided <see name="topic"/>"
            </summary>
            <param name="topic">Not null topic string</param>
            <param name="messageReceiver">Not null message receiver class instance</param>
        </member>
        <member name="M:RGN.Modules.Messaging.MessagingModule.SendMessageByUserId(System.String,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Sends a message to provided user.
            This method works only for admin users.
            If the title and text are null or empty it will send a data message.
            Data messages do not appear in the device system tray.
            If the title and/or the text are provided, the ht
            </summary>
            <param name="appId">The project id to send the message</param>
            <param name="userId">The user id to send the message to</param>
            <param name="payload">Any string (preferable json) with custom data
            that will be attached to the message</param>
            <param name="title">Optional. If provided, the message will appear in system tray
            in case the application is in background</param>
            <param name="text">Optional. If provided, the message will appear in system tray
            in case the application is in background</param>
            <param name="cancellationToken">A token to cancel the operation.</param>
            <returns></returns>
        </member>
    </members>
</doc>
